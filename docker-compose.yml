services:
    users-db:
        container_name: postgres
        image: postgres:latest
        env_file:
            - .env
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB_NAME}
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_DOCKER_PORT}"
        networks:
            - app-network
        volumes:
            - users-data:/var/lib/postgresql/users-data
    papercut:
        image: jijiechen/papercut:latest
        container_name: papercut
        ports:
            - "25:25"          # SMTP порт для отправки писем
            - "37408:37408"    # Веб-интерфейс
        restart: unless-stopped
    rabbitmq:
        image: rabbitmq:management
        env_file:
            /src/NotificationApi/Api/.env
        hostname: ${RABBITMQ__HOST}
        restart: always
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ__USERNAME}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ__PASSWORD}
            - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
        command: |
            bash -c "
            rabbitmq-plugins enable rabbitmq_management;
            rabbitmq-server &
            sleep 10;
            rabbitmqctl add_user ${RABBITMQ__USERNAME} ${RABBITMQ__PASSWORD};
            rabbitmqctl set_user_tags ${RABBITMQ__USERNAME} administrator;
            rabbitmqctl set_permissions -p / ${RABBITMQ__USERNAME} '.*' '.*' '.*';
            wait"
        volumes:
            - rabbitmq:/var/lib/rabbitmq
        ports:
            - '5672:5672'
            - '5673:5673'
            - '15672:15672'
volumes:
    users-data:
    rabbitmq:

networks:
    app-network:
        driver: bridge